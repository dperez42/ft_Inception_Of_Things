# -*- mode: ruby -*-
# vi: set ft=ruby :
# the first two lines are modeling for vim or emacs in case you are using them
# read more : https://vim.fandom.com/wiki/Modeline_magic and http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html

# master config
SERVER_NAME = 'dperez-zS'
SERVER_TOKEN = '12345'
#SERVER_IP = '192.168.63.110'
SERVER_IP = '192.168.56.247'

#agent config
WORKER1_NAME = 'dperez-zSW'
WORKER1_IP = '192.168.56.248' #'192.168.42.111'

# common config
MEM = 1024
CPU = 1
BOX = "generic/centos8" # p.e. generic/alpine312 centos/8,....
#BOX_URL = "https://app.vagrantup.com/centos/boxes/8/versions/2011.0/providers/virtualbox.box"
BOX_AUTO_UPDATE = false

# disable firewall so we can have direct ssh access without need to copy our ssh public key to the machine 
# !!! (NOT RECOMMENDED , USE THE SSH KEYS METHOD IN PRODUCTION ENV, THIS IS ONLY FOR SCHOOL PRACTICING PURPOSE ) !!!

Vagrant.configure("2") do |config|
	config.vm.box = BOX
	#config.vm.box_url = BOX_URL
	config.vm.box_check_update = BOX_AUTO_UPDATE
	config.ssh.insert_key = false # leave insecured key-pair to ssh, set to true if you eant generated new
	#config.ssh.username = 'vagrant'
	#config.ssh.password = 'vagrant'
    config.vm.provision "shell", path: "./scripts/firewalld-disable.sh"

	
	# DEFINE THE PROVIDER
	config.vm.provider "virtualbox" do |v|
		v.memory = MEM
		v.cpus = CPU
        # is like VboxManage VM.name -- (command)
		v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        #v.customize ["modifyvm", :id, "--nested-hw-virt", "on"] # enable virtualization VT-x/AMD-V anidada
	end

	# SERVER VM
	config.vm.define SERVER_NAME do |master|
		master.vm.hostname = SERVER_NAME

		# define network https://developer.hashicorp.com/vagrant/docs/networking  https://devops.stackexchange.com/questions/1237/how-do-i-configure-ssh-keys-in-a-vagrant-multi-machine-setup
		master.vm.network "private_network", ip: SERVER_IP, hostname: true
		
		# Config SSH https://developer.hashicorp.com/vagrant/docs/vagrantfile/ssh_settings
		# always use Vagrants insecure key disable create automatically a new key pair.
    	#master.vm.ssh.insert_key = false
	
		# Sync folder between host and guest -> good for share infomation between VMs https://developer.hashicorp.com/vagrant/docs/synced-folders
		# By default, Vagrant will share your project directory (the directory with the Vagrantfile) to /vagrant.
		# guest path as to be absolute
		#master.vm.synced_folder "./config", "/vagrant/config", type: "virtualbox"

		# Upload files from host to guest machine. note: not with high privileges https://developer.hashicorp.com/vagrant/docs/provisioning/file
		master.vm.provision "file", source: "./scripts", destination: "$HOME/vagrant/scripts"
		
		# Execute shell scripts in guest, privileged: true (sudo) (default) https://developer.hashicorp.com/vagrant/docs/provisioning/shell
        master.vm.provision "shell", path: "./scripts/k3s-install-server.sh", args: [SERVER_TOKEN]
		# example: master.vm.provision "shell", privileged: true, path: "scripts/master_node_setup.sh", args: [MASTER_NODE_IP]
		# example: master.vm.provision "shell", inline: "echo 'VM dperez-zS deployed'"

		master.vm.post_up_message = "generic/centos8 box server" # Add a custom messsage at the end

		master.vm.provider "virtualbox" do |v|
			v.name = SERVER_NAME
			# v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/vagrant", "1"]
		end
		master.vm.provision "shell", inline: "echo 'Virtual Machine dperez-zS deployed'"
	end

	config.vm.define WORKER1_NAME do |worker|
		worker.vm.hostname = WORKER1_NAME

		# Define network https://developer.hashicorp.com/vagrant/docs/networking
		worker.vm.network "private_network", ip: WORKER1_IP, hostname: true

		# Sync folder between host and guest -> good for share infomation between VMs https://developer.hashicorp.com/vagrant/docs/synced-folders
		# By default, Vagrant will share your project directory (the directory with the Vagrantfile) to /vagrant.
		# guest path as to be absolute
		#worker.vm.synced_folder "./config", "/vagrant/config", type: "virtualbox"
		
		# Upload files from host to guest machine. note: not with high privileges https://developer.hashicorp.com/vagrant/docs/provisioning/file
		worker.vm.provision "file", source: "./scripts", destination: "$HOME/vagrant/scripts"

		# Execute shell scripts, privileged: true (sudo) (default) https://developer.hashicorp.com/vagrant/docs/provisioning/shell        
		worker.vm.provision "shell", privileged: true, path: "./scripts/k3s-install-agent.sh", args: [SERVER_IP, SERVER_TOKEN, WORKER1_IP]
		#worker.vm.provision "shell", inline: "/bin/bash 'source ~/.bashrc'"
		# example: master.vm.provision "shell", privileged: true, path: "scripts/master_node_setup.sh", args: [MASTER_NODE_IP]
		# example: master.vm.provision "shell", inline: "echo 'VM dperez-zS deployed'"

		worker.vm.post_up_message = "generic/centos8 box worker" # Add a custom messsage at the end

		worker.vm.provider "virtualbox" do |v|
			v.name = WORKER1_NAME
			# v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/vagrant", "1"]
		end

		worker.vm.provision "shell", inline: "echo 'Virtual Machine dperez-zSW deployed'" 
	end

end